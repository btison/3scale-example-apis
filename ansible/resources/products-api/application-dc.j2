---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ application_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: {{ application_name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 3600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ application_name }}
    spec:
      containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          imagePullPolicy: IfNotPresent
          name: {{ application_name }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 3
          resources:
            limits:
              cpu: '{{ resources_limits_cpu }}'
              memory: '{{ resources_limits_memory }}'
            requests:
              cpu: '{{ resources_requests_cpu }}'
              memory: '{{ resources_requests_memory }}'
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /deployments/config
              name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ service_account }}
      serviceAccountName: {{ service_account }}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ application_configmap }}
          name: config
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ application_name }}
        from:
          kind: ImageStreamTag
          name: "{{ application_imagestream }}:{{ application_image_tag }}"
          namespace: {{ imagestream_namespace }}
      type: ImageChange
